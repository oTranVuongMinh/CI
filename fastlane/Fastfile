# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.42.0"

default_platform :ios

platform :ios do
    before_all do
        # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
        
    
    end
    
    desc "run all"
    lane :develop do
        lint()
        test()
        coverage()
    end
    
    desc "check lint"
    lane :lint do
        swiftlint(
            mode: :lint,      # SwiftLint mode: :lint (default) or :autocorrect
            output_file: ".framgia-ci-reports/swift-lint.xml", # The path of the output file (optional)
            config_file: ".fastlane-swiftlint.yml",     # The path of the configuration file (optional)
            ignore_exit_status: true    # Allow fastlane to continue even if SwiftLint returns a non-zero exit status
        )
    end

    desc "Runs all the tests"
    lane :test do
        scan(
            project: "CI.xcodeproj",
            scheme: "CI",
            code_coverage: true,
            devices: ['iPhone 7','iPhone 6','iPhone 5s'],
            output_style: "rspec",
            output_types: "html",
            output_files: "unit_test.html",
            output_directory: ".framgia-ci-reports/"
        )
    end
    
    desc "Code Coverage"
    lane :coverage do 
        slather(
            scheme: "CI",
            proj: "CI.xcodeproj",
            html: true,
            source_directory: "CI/",
            output_directory: ".framgia-ci-reports/code_coverage/"
        )
    end
    # You can define as many lanes as you want

    after_all do |lane|
        # This block is called, only if the executed lane was successful

        # slack(
        #   message: "Successfully deployed new App Update."
        # )
    end

    error do |lane, exception|
        # slack(
        #   message: exception.message,
        #   success: false
        # )
    end
end
